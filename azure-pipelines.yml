trigger:
- master
pool:
  vmImage: ubuntu-latest
variables:
  buildConfiguration: Release
steps:
- task: DotNetCoreCLI@2
  displayName: dotnet restore
  inputs:
    command: restore
    feedsToUse: select
    vstsFeed: my-vsts-feed

- task: DotNetCoreCLI@2
  displayName: dotnet tool install --global dotnet-sonarscanner
  inputs:
    command: tool install --global dotnet-sonarscanner
 

- task: DotNetCoreCLI@2
  displayName: dotnet build
  inputs:
    command: build
    projects: '**/*.csproj'
    arguments: --configuration $(buildConfiguration)
- task: DotNetCoreCLI@2
  displayName: dotnet unit test
  inputs:
    command: test
    projects: '**/*Tests/*.csproj'
    arguments: --configuration $(buildConfiguration)
- task: DotNetCoreCLI@2
  displayName: dotnet collect code coverage
  inputs:
    command: test
    projects: '**/*Tests/*.csproj'
    arguments: --configuration $(buildConfiguration) --collect "Code coverage"
- task: PublishCodeCoverageResults@1
  displayName: Publish code coverage report
  inputs:
    codeCoverageTool: Cobertura
    summaryFileLocation: $(Build.SourcesDirectory)/**/coverage.cobertura.xml
- task: DotNetCoreCLI@2
  displayName: zipAfterPublish
  inputs:
    command: publish
    publishWebProjects: true
    arguments: --configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)
    zipAfterPublish: true
- task: PublishBuildArtifacts@1
  displayName: PublishBuildArtifacts
  inputs:
    pathtoPublish: $(Build.ArtifactStagingDirectory)
    artifactName: drop
- task: DotNetCoreCLI@2
  displayName: zipAfterPublish
  inputs:
    command: publish
    publishWebProjects: true
    arguments: --configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)
    zipAfterPublish: true
